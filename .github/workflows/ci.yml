name: CI

# Run on pushes to main and on all pull requests
on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint-and-test:
    name: Lint and Test
    runs-on: ubuntu-latest
    
    # Set up PostgreSQL service for backend
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpassword
          POSTGRES_DB: achiever_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    
    # Environment variables for the job
    env:
      DATABASE_URL: postgresql://testuser:testpassword@localhost:5432/achiever_test
    
    steps:
      # Step 1: Checkout the code
      - name: Checkout code
        uses: actions/checkout@v4

      # Step 2: Set up Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      # Step 3: Install root dependencies
      - name: Install root dependencies
        run: npm ci

      # Step 4: Install backend dependencies
      - name: Install backend dependencies
        run: cd achiever-api && npm ci

      # Step 5: Run database migrations
      - name: Setup test database
        run: cd achiever-api && npx prisma migrate deploy

      # Step 6: Seed test database
      - name: Seed test database
        run: cd achiever-api && node seed-games.js
        env:
          STEAM_API_KEY: ${{ secrets.STEAM_API_KEY }}

      # Step 7: Run linter
      - name: Run ESLint
        run: npm run lint

      # Step 8: Run unit tests
      - name: Run unit tests
        run: npm run test:unit

      # Step 9: Install Playwright browsers
      - name: Install Playwright browsers
        run: npx playwright install --with-deps

      # Step 10: Run E2E tests
      - name: Run Playwright tests
        run: npm run test:e2e

      # Step 11: Upload test results if tests fail
      - name: Upload Playwright report
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

